const createCube = require('./index');
test('should  cube 1x1x1 with size 1 ', () => {
    /* Expect:
     /\_\
     \/_/
    */
    const exp = "/\\_\\" + "\n"
              + "\\/_/";
    const result = createCube(1);
    expect(result).toBe(exp);
});

it('should cube 2x2x2 with size 2', () => {
    /* Expect:
     /\_\_\
    /\/\_\_\
    \/\/_/_/
     \/_/_/
    */
    const exp = " /\\_\\_\\" + "\n"
              + "/\\/\\_\\_\\" + "\n"
              + "\\/\\/_/_/" + "\n"
              + " \\/_/_/";
    const result = createCube(2);
    expect(result).toBe(exp);
});

it('should cube 3x3x3 with size 3', () => {
    /* Expect:
      /\_\_\_\
     /\/\_\_\_\
    /\/\/\_\_\_\
    \/\/\/_/_/_/
     \/\/_/_/_/
      \/_/_/_/
    */
    const exp = "  /\\_\\_\\_\\" + "\n"
              + " /\\/\\_\\_\\_\\" + "\n"
              + "/\\/\\/\\_\\_\\_\\" + "\n"
              + "\\/\\/\\/_/_/_/" + "\n"
              + " \\/\\/_/_/_/" + "\n"
              + "  \\/_/_/_/";

    const result = createCube(3);
    expect(result).toBe(exp);

});

it('should  cube 10x10x10 with size 10', () => {
    const exp='         /\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'        /\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'       /\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'      /\\/\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'     /\\/\\/\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'    /\\/\\/\\/\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'   /\\/\\/\\/\\/\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'  /\\/\\/\\/\\/\\/\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +' /\\/\\/\\/\\/\\/\\/\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'/\\/\\/\\/\\/\\/\\/\\/\\/\\/\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\'+'\n'
             +'\\/\\/\\/\\/\\/\\/\\/\\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +' \\/\\/\\/\\/\\/\\/\\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'  \\/\\/\\/\\/\\/\\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'   \\/\\/\\/\\/\\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'    \\/\\/\\/\\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'     \\/\\/\\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'      \\/\\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'       \\/\\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'        \\/\\/_/_/_/_/_/_/_/_/_/_/'+'\n'
             +'         \\/_/_/_/_/_/_/_/_/_/_/';
    const result=createCube(10);
    expect(result).toBe(exp);
});